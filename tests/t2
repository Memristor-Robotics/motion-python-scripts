#!/usr/bin/python3

import time
import signal
#  def foo(bar, baz):
  #  print( 'hello {0}'.format(bar))
  #  return bar + baz

from multiprocessing.pool import ThreadPool
pool = ThreadPool(processes=1)

#  async_result = pool.apply_async(foo, ('world', 'foo')) # tuple of args for foo

import sys
sys.path.append('/home/pi/python')
from Engine import *

r=Engine()

from math import *
r.conf_set('send_status_interval', 100)
r.setpos(0,0)
r.speed(80)

r.tol = 20
for i in range(1,5):
	r.move(i*350, int(sin(2*pi * i/4 * 1) * 200.0), 500)
	#  print( ((i+1)*100, sin(2*pi * i/10 * 1.0) * 200.0) )
#  while True:
	#  r.t(50)
	#  pool.apply_async( lambda: (time.sleep(0.5),r.t(20)) )
	#  r.turn(180)
	
	#  r.move(200,300,200)
	#  r.move(0,0,300)
	#  r.move(400,0,300)
	#  r.forward(-500)
	#  pool.apply_async(lambda: (time.sleep(0.5), r.t(0)) )
	#  r.forward(500)
	
